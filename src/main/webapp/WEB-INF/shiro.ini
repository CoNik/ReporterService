[main]
#Define Filters
hasRoleFilter =org.reporter.service.ets_reports.auth.AuthFilter
authc.loginUrl = /faces/login.xhtml
authc.successUrl = /faces/index.xhtml
authc.usernameParam = authForm:username
authc.passwordParam = authForm:password
ssl.enabled = false


# DataSource Setup
datasource = org.apache.shiro.jndi.JndiObjectFactory
datasource.resourceName = java:app/ETS
#datasource.resourceName = java:/ETS
datasource.resourceRef = true

#JDBC realm
jdbcRealm = org.apache.shiro.realm.jdbc.JdbcRealm
jdbcRealm.authenticationQuery = SELECT Password FROM dbo.Users_V WHERE UserName = ?
jdbcRealm.userRolesQuery = SELECT roles_table.RoleName from dbo.Roles_V roles_table, dbo.Users_V users_table, dbo.UserRoles_V roles_map_table WHERE roles_map_table.UserId = users_table.Id AND roles_table.Id = roles_map_table.RoleId AND users_table.UserName = ?
jdbcRealm.permissionsLookupEnabled = false
jdbcRealm.dataSource = $datasource
securityManager.realms = $jdbcRealm


# Filter Setup
[urls]
# Permitted - resources & webresources
/faces/javax.faces.resource/** = anon
/webresources/** = anon
/resources/images/**=anon

# Permitted - login & changePassword & register
/faces/change-password.xhtml = anon
/faces/register.xhtml = anon
/faces/login.xhtml = authc
/faces/logout = logout

# Permitted - error pages
/faces/error/* = anon

# Restricted areas
/faces/users/* = hasRoleFilter[Admin]

# Restricted - nomenclatures
/faces/activities/* = hasRoleFilter[Admin]
/faces/validatorTypes/* = hasRoleFilter[Admin]
/faces/cardTypes/* = hasRoleFilter[Admin]
/faces/fraudTypes/* = hasRoleFilter[Admin]

/faces/map/* = hasRoleFilter[Admin, TrafficManager]
/faces/devices/* = hasRoleFilter[Admin, TrafficManager]
/faces/machines/* = hasRoleFilter[Admin, TrafficManager]
/faces/validators/* = hasRoleFilter[Admin, TrafficManager]
/faces/deviceStateHistory/* = hasRoleFilter[Admin, TrafficManager]
/faces/customers/* = hasRoleFilter[Admin, TrafficManager]
/faces/cards/* = hasRoleFilter[Admin, TrafficManager]
/faces/stations/* = hasRoleFilter[Admin, TrafficManager]
/faces/direction/* = hasRoleFilter[Admin, TrafficManager]
/faces/routes/* = hasRoleFilter[Admin, TrafficManager]
/faces/routePrices/* = hasRoleFilter[Admin, TrafficManager]
/faces/rulesRoute/* = hasRoleFilter[Admin, TrafficManager]
/faces/dataAnalysis/* = hasRoleFilter[Admin, TrafficManager]

# Other areas permitted (if authenticated)
/** = authc